{"remainingRequest":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js!E:\\VScode-workplace\\project-SHP3\\src\\store\\home\\index.js","dependencies":[{"path":"E:\\VScode-workplace\\project-SHP3\\src\\store\\home\\index.js","mtime":1657067206620},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656639267156},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js","mtime":1656639277841}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\VScode-workplace\\\\project-SHP3\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { reqCategoryList, reqGetBannerList, reqFloorList } from \"@/api\"; //home模块化小仓库\n\nvar state = {\n  //茛距接口的初始值返回初始化\n  categoryList: [],\n  //轮播图的数据\n  bannerList: [],\n  floorList: []\n};\nvar mutations = {\n  CATEGORYLIST: function CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  GETBANNERLIST: function GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  GETFLOORLIST: function GETFLOORLIST(state, floorList) {\n    state.floorList = floorList;\n  }\n};\nvar actions = {\n  categoryList: function () {\n    var _categoryList = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCategoryList();\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code === 200) {\n                commit('CATEGORYLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function categoryList(_x) {\n      return _categoryList.apply(this, arguments);\n    }\n\n    return categoryList;\n  }(),\n  getBannerList: function () {\n    var _getBannerList = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqGetBannerList();\n\n            case 3:\n              result = _context2.sent;\n\n              if (result.code === 200) {\n                commit('GETBANNERLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getBannerList(_x2) {\n      return _getBannerList.apply(this, arguments);\n    }\n\n    return getBannerList;\n  }(),\n  //获取floor数据\n  getFloorList: function () {\n    var _getFloorList = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqFloorList();\n\n            case 3:\n              result = _context3.sent;\n\n              if (result.code === 200) {\n                commit('GETFLOORLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getFloorList(_x3) {\n      return _getFloorList.apply(this, arguments);\n    }\n\n    return getFloorList;\n  }()\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["E:\\VScode-workplace\\project-SHP3\\src\\store\\home\\index.js"],"names":["reqCategoryList","reqGetBannerList","reqFloorList","state","categoryList","bannerList","floorList","mutations","CATEGORYLIST","GETBANNERLIST","GETFLOORLIST","actions","commit","result","code","data","getBannerList","getFloorList","getters"],"mappings":";;AAAA,SAAQA,eAAR,EAAwBC,gBAAxB,EAAyCC,YAAzC,QAA4D,OAA5D,C,CACA;;AACA,IAAMC,KAAK,GAAG;AACV;AACAC,EAAAA,YAAY,EAAC,EAFH;AAGV;AACAC,EAAAA,UAAU,EAAE,EAJF;AAKVC,EAAAA,SAAS,EAAE;AALD,CAAd;AAQA,IAAMC,SAAS,GAAG;AACdC,EAAAA,YADc,wBACDL,KADC,EACKC,YADL,EACmB;AAC7BD,IAAAA,KAAK,CAACC,YAAN,GAAqBA,YAArB;AACH,GAHa;AAIdK,EAAAA,aAJc,yBAIAN,KAJA,EAIME,UAJN,EAIkB;AAC5BF,IAAAA,KAAK,CAACE,UAAN,GAAmBA,UAAnB;AACH,GANa;AAOdK,EAAAA,YAPc,wBAODP,KAPC,EAOKG,SAPL,EAOgB;AAC1BH,IAAAA,KAAK,CAACG,SAAN,GAAkBA,SAAlB;AACH;AATa,CAAlB;AAWA,IAAMK,OAAO,GAAG;AACPP,EAAAA,YADO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACOQ,cAAAA,MADP,QACOA,MADP;AAAA;AAAA,qBAEWZ,eAAe,EAF1B;;AAAA;AAEJa,cAAAA,MAFI;;AAGR,kBAAGA,MAAM,CAACC,IAAP,KAAgB,GAAnB,EAAuB;AACnBF,gBAAAA,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACH;;AALO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOPC,EAAAA,aAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOQJ,cAAAA,MAPR,SAOQA,MAPR;AAAA;AAAA,qBAQYX,gBAAgB,EAR5B;;AAAA;AAQJY,cAAAA,MARI;;AASR,kBAAGA,MAAM,CAACC,IAAP,KAAgB,GAAnB,EAAuB;AACnBF,gBAAAA,MAAM,CAAC,eAAD,EAAiBC,MAAM,CAACE,IAAxB,CAAN;AACH;;AAXO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAaZ;AACKE,EAAAA,YAdO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcOL,cAAAA,MAdP,SAcOA,MAdP;AAAA;AAAA,qBAeYV,YAAY,EAfxB;;AAAA;AAeJW,cAAAA,MAfI;;AAgBR,kBAAGA,MAAM,CAACC,IAAP,KAAgB,GAAnB,EAAuB;AACnBF,gBAAAA,MAAM,CAAC,cAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACH;;AAlBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAqBA,IAAMG,OAAO,GAAG,EAAhB;AACA,eAAe;AACXf,EAAAA,KAAK,EAALA,KADW;AAEXI,EAAAA,SAAS,EAATA,SAFW;AAGXI,EAAAA,OAAO,EAAPA,OAHW;AAIXO,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import {reqCategoryList,reqGetBannerList,reqFloorList} from \"@/api\"\r\n//home模块化小仓库\r\nconst state = {\r\n    //茛距接口的初始值返回初始化\r\n    categoryList:[],\r\n    //轮播图的数据\r\n    bannerList: [],\r\n    floorList: []\r\n\r\n};\r\nconst mutations = {\r\n    CATEGORYLIST(state,categoryList ){\r\n        state.categoryList = categoryList\r\n    },\r\n    GETBANNERLIST(state,bannerList ){\r\n        state.bannerList = bannerList\r\n    },\r\n    GETFLOORLIST(state,floorList ){\r\n        state.floorList = floorList\r\n    },\r\n};\r\nconst actions = {\r\n   async categoryList({commit}){\r\n        let result = await reqCategoryList()\r\n        if(result.code === 200){\r\n            commit('CATEGORYLIST',result.data)\r\n        }\r\n    },\r\n   async getBannerList({commit}){\r\n        let result = await  reqGetBannerList()\r\n        if(result.code === 200){\r\n            commit('GETBANNERLIST',result.data)\r\n        }\r\n    },\r\n    //获取floor数据\r\n   async getFloorList({commit}){\r\n        let result = await  reqFloorList()\r\n        if(result.code === 200){\r\n            commit('GETFLOORLIST',result.data)\r\n        }\r\n    }\r\n}; \r\nconst getters = {};\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}\r\n"]}]}