{"remainingRequest":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js!E:\\VScode-workplace\\project-SHP3\\src\\store\\shopcart\\index.js","dependencies":[{"path":"E:\\VScode-workplace\\project-SHP3\\src\\store\\shopcart\\index.js","mtime":1657853324015},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656639267156},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js","mtime":1656639277841}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\VScode-workplace\\\\project-SHP3\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { reqCartList, reqDeleteCartById, reqUpdateCheckedById } from \"@/api\";\nvar state = {\n  cartList: []\n};\nvar mutations = {\n  GETCARTLIST: function GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n};\nvar actions = {\n  getCartList: function () {\n    var _getCartList = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCartList();\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit(\"GETCARTLIST\", result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getCartList(_x) {\n      return _getCartList.apply(this, arguments);\n    }\n\n    return getCartList;\n  }(),\n  //删除购物车某一个产品\n  deleteCartBySkuId: function () {\n    var _deleteCartBySkuId = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, skuId) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqDeleteCartById(skuId);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", \"ok\");\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function deleteCartBySkuId(_x2, _x3) {\n      return _deleteCartBySkuId.apply(this, arguments);\n    }\n\n    return deleteCartBySkuId;\n  }(),\n  //修改购物车选中状态\n  updateCheckedById: function () {\n    var _updateCheckedById = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, _ref4) {\n      var commit, skuId, isChecked, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              skuId = _ref4.skuId, isChecked = _ref4.isChecked;\n              _context3.next = 4;\n              return reqUpdateCheckedById(skuId, isChecked);\n\n            case 4:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 9;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", \"ok\");\n\n            case 9:\n              return _context3.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function updateCheckedById(_x4, _x5) {\n      return _updateCheckedById.apply(this, arguments);\n    }\n\n    return updateCheckedById;\n  }(),\n  deleteAllCheckedCart: function deleteAllCheckedCart(_ref5) {\n    var dispatch = _ref5.dispatch,\n        getters = _ref5.getters;\n    //获取购物车全部产品\n    var PromiseAll = [];\n    getters.cartList.cartInfoList.forEach(function (item) {\n      var promise = item.isChecked == 1 ? dispatch(\"deleteCartBySkuId\", item.skuId) : \"\";\n      PromiseAll.push(promise);\n    }); //\n\n    return Promise.all(PromiseAll);\n  }\n};\nvar getters = {\n  cartList: function cartList(state) {\n    return state.cartList[0] || {};\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["E:\\VScode-workplace\\project-SHP3\\src\\store\\shopcart\\index.js"],"names":["reqCartList","reqDeleteCartById","reqUpdateCheckedById","state","cartList","mutations","GETCARTLIST","actions","getCartList","commit","result","code","data","deleteCartBySkuId","skuId","Promise","reject","Error","updateCheckedById","isChecked","deleteAllCheckedCart","dispatch","getters","PromiseAll","cartInfoList","forEach","item","promise","push","all"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,iBAAtB,EAAyCC,oBAAzC,QAAqE,OAArE;AACA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE;AADE,CAAd;AAGA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,WADgB,uBACJH,KADI,EACGC,QADH,EACa;AAC3BD,IAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACD;AAHe,CAAlB;AAKA,IAAMG,OAAO,GAAG;AACRC,EAAAA,WADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,cAAAA,MADN,QACMA,MADN;AAAA;AAAA,qBAEOT,WAAW,EAFlB;;AAAA;AAERU,cAAAA,MAFQ;;AAGZ,kBAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;AACtBF,gBAAAA,MAAM,CAAC,aAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;AACD;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAOd;AACMC,EAAAA,iBARQ;AAAA;AAAA;AAAA,qDAQsBC,KARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAQYL,cAAAA,MARZ,SAQYA,MARZ;AAAA;AAAA,qBASOR,iBAAiB,CAACa,KAAD,CATxB;;AAAA;AASRJ,cAAAA,MATQ;;AAAA,oBAURA,MAAM,CAACC,IAAP,IAAe,GAVP;AAAA;AAAA;AAAA;;AAAA,gDAWH,IAXG;;AAAA;AAAA,gDAaHI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAbG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBd;AACMC,EAAAA,iBAjBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBYT,cAAAA,MAjBZ,SAiBYA,MAjBZ;AAiBwBK,cAAAA,KAjBxB,SAiBwBA,KAjBxB,EAiB+BK,SAjB/B,SAiB+BA,SAjB/B;AAAA;AAAA,qBAkBOjB,oBAAoB,CAACY,KAAD,EAAQK,SAAR,CAlB3B;;AAAA;AAkBRT,cAAAA,MAlBQ;;AAAA,oBAmBRA,MAAM,CAACC,IAAP,IAAe,GAnBP;AAAA;AAAA;AAAA;;AAAA,gDAoBH,IApBG;;AAAA;AAAA,gDAsBHI,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAtBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBdG,EAAAA,oBAzBc,uCAyB8B;AAAA,QAArBC,QAAqB,SAArBA,QAAqB;AAAA,QAAXC,OAAW,SAAXA,OAAW;AAC1C;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAD,IAAAA,OAAO,CAAClB,QAAR,CAAiBoB,YAAjB,CAA8BC,OAA9B,CAAsC,UAACC,IAAD,EAAU;AAC/C,UAAIC,OAAO,GAAGD,IAAI,CAACP,SAAL,IAAkB,CAAlB,GAAsBE,QAAQ,CAAC,mBAAD,EAAsBK,IAAI,CAACZ,KAA3B,CAA9B,GAAkE,EAAhF;AACCS,MAAAA,UAAU,CAACK,IAAX,CAAgBD,OAAhB;AACD,KAHD,EAH0C,CAO1C;;AACA,WAAOZ,OAAO,CAACc,GAAR,CAAYN,UAAZ,CAAP;AACD;AAlCa,CAAhB;AAoCA,IAAMD,OAAO,GAAG;AACdlB,EAAAA,QADc,oBACLD,KADK,EACE;AACd,WAAOA,KAAK,CAACC,QAAN,CAAe,CAAf,KAAqB,EAA5B;AACD;AAHa,CAAhB;AAKA,eAAe;AACbD,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,SAAS,EAATA,SAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIbe,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { reqCartList, reqDeleteCartById, reqUpdateCheckedById } from \"@/api\";\r\nconst state = {\r\n  cartList: [],\r\n};\r\nconst mutations = {\r\n  GETCARTLIST(state, cartList) {\r\n    state.cartList = cartList;\r\n  },\r\n};\r\nconst actions = {\r\n  async getCartList({ commit }) {\r\n    let result = await reqCartList();\r\n    if (result.code == 200) {\r\n      commit(\"GETCARTLIST\", result.data);\r\n    }\r\n  },\r\n  //删除购物车某一个产品\r\n  async deleteCartBySkuId({ commit }, skuId) {\r\n    let result = await reqDeleteCartById(skuId);\r\n    if (result.code == 200) {\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error(\"faile\"));\r\n    }\r\n  },\r\n  //修改购物车选中状态\r\n  async updateCheckedById({ commit }, { skuId, isChecked }) {\r\n    let result = await reqUpdateCheckedById(skuId, isChecked);\r\n    if (result.code == 200) {\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error(\"faile\"));\r\n    }\r\n  },\r\n  deleteAllCheckedCart({ dispatch, getters }) {\r\n    //获取购物车全部产品\r\n    let PromiseAll = [];\r\n    getters.cartList.cartInfoList.forEach((item) => {\r\n     let promise = item.isChecked == 1 ? dispatch(\"deleteCartBySkuId\", item.skuId) : \"\";\r\n      PromiseAll.push(promise)\r\n    });\r\n    //\r\n    return Promise.all(PromiseAll)\r\n  },\r\n};\r\nconst getters = {\r\n  cartList(state) {\r\n    return state.cartList[0] || {};\r\n  },\r\n};\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"]}]}