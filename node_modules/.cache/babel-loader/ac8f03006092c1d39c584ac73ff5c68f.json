{"remainingRequest":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js!E:\\VScode-workplace\\project-SHP3\\src\\api\\request.js","dependencies":[{"path":"E:\\VScode-workplace\\project-SHP3\\src\\api\\request.js","mtime":1658048573459},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656639267156},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js","mtime":1656639277841}],"contextDependencies":[],"result":["//对于axios二次封装\nimport axios from \"axios\"; //引入进度条\n\nimport nprogress from \"nprogress\";\nimport store from \"@/store\"; //引入进度条的样式\n\nimport \"nprogress/nprogress.css\"; //start代表开始 done代表结束\n\nvar requests = axios.create({\n  //1.create\n  //基础路径\n  baseURL: \"/api\",\n  //超时时间\n  timeout: 5000\n}); //请求拦截器\n\nrequests.interceptors.request.use(function (config) {\n  nprogress.start(); //判断需要token带给服务器\n\n  if (store.state.user.token) {\n    config.headers.token = store.state.user.token;\n  }\n\n  if (store.state.detail.uuid_token) {\n    //请求头添加一个字段\n    config.headers.userTempId = store.state.detail.uuid_token;\n  } //config为配置对象header请求头\n\n\n  return config;\n}); //响应拦截器\n\nrequests.interceptors.response.use(function (res) {\n  nprogress.done();\n  return res.data;\n}, function (error) {\n  //响应失败\n  return Promise.reject(new Error(\"faile\"));\n});\nexport default requests;",{"version":3,"sources":["E:\\VScode-workplace\\project-SHP3\\src\\api\\request.js"],"names":["axios","nprogress","store","requests","create","baseURL","timeout","interceptors","request","use","config","start","state","user","token","headers","detail","uuid_token","userTempId","response","res","done","data","error","Promise","reject","Error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,OAAO,yBAAP,C,CACA;;AACA,IAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5B;AACA;AACAC,EAAAA,OAAO,EAAE,MAHmB;AAI5B;AACAC,EAAAA,OAAO,EAAE;AALmB,CAAb,CAAjB,C,CAOA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAACC,MAAD,EAAY;AAC5CT,EAAAA,SAAS,CAACU,KAAV,GAD4C,CAE1C;;AACA,MAAGT,KAAK,CAACU,KAAN,CAAYC,IAAZ,CAAiBC,KAApB,EAA0B;AACxBJ,IAAAA,MAAM,CAACK,OAAP,CAAeD,KAAf,GAAuBZ,KAAK,CAACU,KAAN,CAAYC,IAAZ,CAAiBC,KAAxC;AAED;;AACH,MAAIZ,KAAK,CAACU,KAAN,CAAYI,MAAZ,CAAmBC,UAAvB,EAAmC;AACjC;AACAP,IAAAA,MAAM,CAACK,OAAP,CAAeG,UAAf,GAA4BhB,KAAK,CAACU,KAAN,CAAYI,MAAZ,CAAmBC,UAA/C;AACD,GAV2C,CAW5C;;;AACA,SAAOP,MAAP;AACD,CAbD,E,CAcA;;AACAP,QAAQ,CAACI,YAAT,CAAsBY,QAAtB,CAA+BV,GAA/B,CACE,UAACW,GAAD,EAAS;AACPnB,EAAAA,SAAS,CAACoB,IAAV;AACA,SAAOD,GAAG,CAACE,IAAX;AACD,CAJH,EAKE,UAACC,KAAD,EAAW;AACT;AACA,SAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,OAAV,CAAf,CAAP;AACD,CARH;AAUA,eAAevB,QAAf","sourcesContent":["//对于axios二次封装\r\nimport axios from \"axios\";\r\n//引入进度条\r\nimport nprogress from \"nprogress\";\r\nimport store from \"@/store\";\r\n//引入进度条的样式\r\nimport \"nprogress/nprogress.css\";\r\n//start代表开始 done代表结束\r\nconst requests = axios.create({\r\n  //1.create\r\n  //基础路径\r\n  baseURL: \"/api\",\r\n  //超时时间\r\n  timeout: 5000,\r\n});\r\n//请求拦截器\r\nrequests.interceptors.request.use((config) => {\r\n  nprogress.start();\r\n    //判断需要token带给服务器\r\n    if(store.state.user.token){\r\n      config.headers.token = store.state.user.token\r\n\r\n    }\r\n  if (store.state.detail.uuid_token) {\r\n    //请求头添加一个字段\r\n    config.headers.userTempId = store.state.detail.uuid_token;\r\n  }\r\n  //config为配置对象header请求头\r\n  return config;\r\n});\r\n//响应拦截器\r\nrequests.interceptors.response.use(\r\n  (res) => {\r\n    nprogress.done();\r\n    return res.data;\r\n  },\r\n  (error) => {\r\n    //响应失败\r\n    return Promise.reject(new Error(\"faile\"));\r\n  }\r\n);\r\nexport default requests;\r\n"]}]}