{"remainingRequest":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js!E:\\VScode-workplace\\project-SHP3\\src\\store\\user\\index.js","dependencies":[{"path":"E:\\VScode-workplace\\project-SHP3\\src\\store\\user\\index.js","mtime":1658045801768},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656639267156},{"path":"E:\\VScode-workplace\\project-SHP3\\node_modules\\babel-loader\\lib\\index.js","mtime":1656639277841}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:\\\\VScode-workplace\\\\project-SHP3\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { reqGetCode, reqUserRegister, reqUserLogin, reqUserInfo, reqLogout } from \"@/api\";\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\nvar state = {\n  code: \"\",\n  token: getToken(),\n  userInfo: {}\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO: function GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  CLEARUSERINFO: function CLEARUSERINFO(state) {\n    state.token = \"\", state.userInfo = {}, removeToken();\n  }\n};\nvar actions = {\n  getCode: function () {\n    var _getCode = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, phone) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code === 200)) {\n                _context.next = 9;\n                break;\n              }\n\n              commit(\"GETCODE\", result.data);\n              return _context.abrupt(\"return\", \"ok\");\n\n            case 9:\n              return _context.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getCode(_x, _x2) {\n      return _getCode.apply(this, arguments);\n    }\n\n    return getCode;\n  }(),\n  //用户注册\n  userRegister: function () {\n    var _userRegister = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, user) {\n      var commit, reslut;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(user);\n\n            case 3:\n              reslut = _context2.sent;\n\n              if (!(reslut.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", \"ok\");\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function userRegister(_x3, _x4) {\n      return _userRegister.apply(this, arguments);\n    }\n\n    return userRegister;\n  }(),\n  //用户登录\n  userLogin: function () {\n    var _userLogin = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, data) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              commit(\"USERLOGIN\", result.data.token); //持久化存储数据\n\n              setToken(result.data.token);\n              return _context3.abrupt(\"return\", \"ok\");\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function userLogin(_x5, _x6) {\n      return _userLogin.apply(this, arguments);\n    }\n\n    return userLogin;\n  }(),\n  //获取用户信息\n  getUserInfo: function () {\n    var _getUserInfo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return reqUserInfo();\n\n            case 3:\n              result = _context4.sent;\n\n              if (!(result.code == 200)) {\n                _context4.next = 9;\n                break;\n              }\n\n              commit(\"GETUSERINFO\", result.data);\n              return _context4.abrupt(\"return\", \"ok\");\n\n            case 9:\n              return _context4.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getUserInfo(_x7) {\n      return _getUserInfo.apply(this, arguments);\n    }\n\n    return getUserInfo;\n  }(),\n  userLogout: function () {\n    var _userLogout = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref5) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return reqLogout();\n\n            case 3:\n              result = _context5.sent;\n\n              if (!(result.code == 200)) {\n                _context5.next = 9;\n                break;\n              }\n\n              commit(\"CLEARUSERINFO\");\n              return _context5.abrupt(\"return\", \"ok\");\n\n            case 9:\n              return _context5.abrupt(\"return\", Promise.reject(new Error(\"faile\")));\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function userLogout(_x8) {\n      return _userLogout.apply(this, arguments);\n    }\n\n    return userLogout;\n  }()\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["E:\\VScode-workplace\\project-SHP3\\src\\store\\user\\index.js"],"names":["reqGetCode","reqUserRegister","reqUserLogin","reqUserInfo","reqLogout","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEARUSERINFO","actions","getCode","phone","commit","result","data","Promise","reject","Error","userRegister","user","reslut","userLogin","getUserInfo","userLogout","getters"],"mappings":"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","sourcesContent":["import {\r\n  reqGetCode,\r\n  reqUserRegister,\r\n  reqUserLogin,\r\n  reqUserInfo,\r\n  reqLogout,\r\n} from \"@/api\";\r\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\r\nconst state = {\r\n  code: \"\",\r\n  token: getToken(),\r\n  userInfo: {},\r\n};\r\nconst mutations = {\r\n  GETCODE(state, code) {\r\n    state.code = code;\r\n  },\r\n  USERLOGIN(state, token) {\r\n    state.token = token;\r\n  },\r\n  GETUSERINFO(state, userInfo) {\r\n    state.userInfo = userInfo;\r\n  },\r\n  CLEARUSERINFO(state) {\r\n    (state.token = \"\"), (state.userInfo = {}), removeToken();\r\n  },\r\n};\r\nconst actions = {\r\n  async getCode({ commit }, phone) {\r\n    let result = await reqGetCode(phone);\r\n    if (result.code === 200) {\r\n      commit(\"GETCODE\", result.data);\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error(\"faile\"));\r\n    }\r\n  },\r\n  //用户注册\r\n  async userRegister({ commit }, user) {\r\n    let reslut = await reqUserRegister(user);\r\n    if (reslut.code == 200) {\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error(\"faile\"));\r\n    }\r\n  },\r\n  //用户登录\r\n  async userLogin({ commit }, data) {\r\n    let result = await reqUserLogin(data);\r\n    //服务器下发token用户唯一标识符\r\n    if (result.code == 200) {\r\n      commit(\"USERLOGIN\", result.data.token);\r\n      //持久化存储数据\r\n      setToken(result.data.token);\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error(\"faile\"));\r\n    }\r\n  },\r\n  //获取用户信息\r\n  async getUserInfo({ commit }) {\r\n    let result = await reqUserInfo();\r\n    if (result.code == 200) {\r\n      commit(\"GETUSERINFO\", result.data);\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error(\"faile\"));\r\n    }\r\n  },\r\n  async userLogout({ commit }) {\r\n    let result = await reqLogout();\r\n    if (result.code == 200) {\r\n      commit(\"CLEARUSERINFO\");\r\n      return \"ok\";\r\n    } else {\r\n      return Promise.reject(new Error(\"faile\"));\r\n    }\r\n  },\r\n};\r\nconst getters = {};\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"]}]}